<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.relex.hotelteam.db.mapper.IUserMapper">

  <delete id="deleteUser">
    DELETE
    FROM inprog.users
    WHERE user_id = #{id}
  </delete>

  <resultMap id="userMap" type="User">
    <id column="user_id" property="id"/>
    <result column="first_name" property="firstName"/>
    <result column="last_name" property="lastName"/>
    <result column="middle_name" property="middleName"/>
    <result column="birth_date" property="birthDate"/>
    <result column="authority_id" property="authority"/>
  </resultMap>

  <resultMap autoMapping="true" id="currentUserMap" type="ru.relex.hotelteam.shared.model.CurrentUser">
    <id column="user_id" property="id"/>
  </resultMap>

  <select id="getUserById" resultMap="userMap">
    SELECT user_id,
           first_name,
           last_name,
           middle_name,
           email,
           birth_date,
           authority_id,
           login,
           password

    FROM inprog.users
    WHERE user_id = #{id}
  </select>

  <select id="getUserByLogin" resultMap="userMap">
    SELECT user_id,
           first_name,
           last_name,
           middle_name,
           email,
           birth_date,
           authority_id,
           login,
           password
    FROM inprog.users
    WHERE login = #{login}
  </select>

  <select id="listUsers" resultMap="userMap">
    SELECT user_id,
           first_name,
           last_name,
           middle_name,
           email,
           birth_date,
           authority_id,
           login

    FROM inprog.users
  </select>

  <select id="createUser" resultType="User">
    INSERT INTO inprog.users(authority_id, first_name, last_name, login,
                             password, middle_name, email, birth_date)
    VALUES (#{authority}, #{firstName}, #{lastName}, #{login}, #{password}, #{middleName}, #{email},
            #{birthDate}) RETURNING user_id as id,
                          first_name,
                          last_name,
                          middle_name,
                          authority_id as authority,
                          login,
                          email,
                          birth_date as birthDate
  </select>

  <select id="getCurrentUser" resultType="ru.relex.hotelteam.shared.model.CurrentUser">
    SELECT user_id,
           login,
           authority_id as authority
    FROM inprog.users
    WHERE login = #{principal}

  </select>

  <select id="getAuthoritiesForUser" resultType="ru.relex.hotelteam.shared.model.Authority">
    SELECT authority_id as authority
    FROM inprog.users
    WHERE login = #{login}
  </select>

  <update id="updateUser" parameterType="User">
    UPDATE inprog.users
    <set>
      <if test="firstName != null">first_name = #{firstName},</if>
      <if test="lastName != null">last_name = #{lastName},</if>
      <if test="middleName != null">middle_name = #{middleName},</if>
      <if test="email != null">email = #{email},</if>
      <if test="birthDate != null">birth_date = #{birthDate}</if>
    </set>

    WHERE user_id = #{id}
  </update>

  <update id="updateUserSecurityInfo" parameterType="User">
    UPDATE inprog.users
    <set>
      <if test="login != null">login = #{login},</if>
      <if test="email != null">email = #{email},</if>
      <if test="password != null">password = #{password}</if>
    </set>

    WHERE user_id = #{id}
  </update>
</mapper>